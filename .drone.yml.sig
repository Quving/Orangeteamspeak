eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CiAgICBidWlsZDoKICAgICAgaW1hZ2U6IGRvY2tlcjpsYXRlc3QKICAgICAgZW52aXJvbm1lbnQ6CiAgICAgICAgICAtIERPQ0tFUl9IT1NUPXVuaXg6Ly8vdG1wL2hvc3Quc29jawogICAgICAgICAgLSBESFVCX0xPR0lOPSR7REhVQl9MT0dJTn0KICAgICAgICAgIC0gREhVQl9QVz0ke0RIVUJfUFd9CiAgICAgICAgICAjLSBET0NLRVJfQVVUSD0ke0RPQ0tFUl9BVVRIfQogICAgICB2b2x1bWVzOgogICAgICAgICAgLSAvdmFyL3J1bi9kb2NrZXIuc29jazovdG1wL2hvc3Quc29jazpydwogICAgICBwcml2aWxlZ2VkOiB0cnVlCiAgICAgIGNvbW1hbmRzOgogICAgICAgICAgLSBkb2NrZXIgYnVpbGQgLXQgcGluZ3Uvb3JhbmdldGVhbXNwZWFrOmxhdGVzdCAuCiAgICAgIHdoZW46CiAgICAgICAgICBicmFuY2g6IFsgbWFzdGVyIF0KCiAgICBkb2NrZXI6CiAgICAgIGltYWdlOiBwbHVnaW5zL2RvY2tlcgogICAgICB1c2VybmFtZTogJHtESFVCX0xPR0lOfQogICAgICBwYXNzd29yZDogJHtESFVCX1BXfQogICAgICByZXBvOiBwaW5ndS9vcmFuZ2V0ZWFtc3BlYWsKICAgICAgdGFnczogbGF0ZXN0CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgbm90aWZ5OgogICAgICBpbWFnZTogcGx1Z2lucy9zbGFjawogICAgICB3ZWJob29rOiAke1NMQUNLX1dFQkhPT0t9ICAgIAogICAgICBjaGFubmVsOiBkcm9uZQogICAgICB1c2VybmFtZTogZHJvbmUtY2kKICAgICAgdGVtcGxhdGU6IHwKICAgICAgICAqe3sgYnVpbGQucmVmIH19KiAje3sgYnVpbGQubnVtYmVyIH19IGJ5ICp7eyBidWlsZC5hdXRob3IgfX0qIGZpbmlzaGVkIHdpdGggYSAqe3sgdXBwZXJjYXNlIGJ1aWxkLnN0YXR1cyB9fSogaW4ge3sgc2luY2UgYnVpbGQuY3JlYXRlZCB9fQogICAgICAgICpDb21taXQqOiBfe3sgYnVpbGQuY29tbWl0IH19XwogICAgICAgICpCcmFuY2gqOiAgX3t7IGJ1aWxkLmJyYW5jaCB9fV8KICAgICAgICB7eyBidWlsZC5saW5rIH19IAogICAgICB3aGVuOgogICAgICAgIGV2ZW50OiBbIHB1c2gsIHRhZywgZGVwbG95bWVudCwgcHVsbF9yZXF1ZXN0IF0KICAgICAgICBzdGF0dXM6IFsgc3VjY2VzcywgZmFpbHVyZSBd.loWPcDsie0NwZlEI608rQyOV1ShM4DaR4FyCH4td3a0